name: Build and push Production container

on:
  release:
    types:
      - created

env:
  AWS_REGION: ca-central-1
  DOCKER_BUILDKIT: 1
  REPO_NAME: platform/wordpress
  PRODUCTION_ECR_REGISTRY: 472286471787.dkr.ecr.ca-central-1.amazonaws.com

permissions:
  id-token: write
  contents: read

jobs:
  build-push-prod-container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@8c3f20df09ac63af7b3ae3d7c91f105f857d8497 # v4.0.0
        with:
          role-to-assume: arn:aws:iam::472286471787:role/gc-articles-ecr-tag-release
          role-session-name: ECRPush
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@2fc7aceee09e9e4a7105c0d060c656fad0b4f63d # v1.7.0

      - name: Docker image tag
        run: |
          if [[ $GITHUB_EVENT_NAME == "release" ]]; then
            echo "IMAGE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=sha-${GITHUB_SHA}" >> $GITHUB_ENV
          fi

      - name: Add Composer auth credentials
        run: |
          cd wordpress
          composer config github-oauth.github.com ${{ secrets.COMPOSER_GITHUB_TOKEN }}
          composer config http-basic.my.yoast.com token ${{ secrets.COMPOSER_YOAST_TOKEN }}

      - name: Build container
        run: |
          docker build \
          --build-arg git_sha="$GITHUB_SHA" \
          --build-arg WPML_USER_ID="${{ secrets.WPML_USER_ID }}" \
          --build-arg WPML_KEY="${{ secrets.WPML_KEY }}" \
          -t "${{ env.PRODUCTION_ECR_REGISTRY }}/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}" \
          -f ./wordpress/docker/Dockerfile .

      - name: Push containers to ECR
        run: |
          docker push ${{ env.PRODUCTION_ECR_REGISTRY }}/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}

      - name: Logout of ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
