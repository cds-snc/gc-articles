name: Docker vulnerability scan

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

env:
  AWS_REGION: ca-central-1
  ECR_REGISTRY: 729164266357.dkr.ecr.ca-central-1.amazonaws.com

permissions:
  id-token: write
  contents: write
  security-events: write

jobs:
  docker-vulnerability-scan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: platform/apache
            path: wordpress/docker/apache/Dockerfile

          - image: platform/wordpress
            path: wordpress/docker/Dockerfile

    steps:
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@8c3f20df09ac63af7b3ae3d7c91f105f857d8497 # v4.0.0
        with:
          role-to-assume: arn:aws:iam::729164266357:role/gc-articles-plan
          role-session-name: ECRPull
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@2fc7aceee09e9e4a7105c0d060c656fad0b4f63d # v1.7.0

      - name: Get latest Docker image tag
        run: |
          IMAGE_TAG="$(aws ecr describe-images --output json --repository-name ${{ matrix.image }} --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' | jq . --raw-output)"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Docker vulnerability scan Wordpress
        uses: cds-snc/security-tools/.github/actions/docker-scan@d6bb182e15f0cad80e7625887ae88e5830728aab # v3.0.0
        with:
          docker_image: "${{ env.ECR_REGISTRY }}/${{ matrix.image }}:${{ env.IMAGE_TAG }}"
          dockerfile_path: "${{ matrix.path }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
