name: "Terragrunt plan STAGING"

on:
  pull_request:
    paths:
      - "infrastructure/terragrunt/aws/**"
      - "infrastructure/terragrunt/env/staging/**"
      - "infrastructure/terragrunt/env/common/**"
      - "infrastructure/terragrunt/env/terragrunt.hcl"
      - ".github/workflows/terragrunt-plan-staging.yml"

env:
  AWS_REGION: ca-central-1
  AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_VERSION: 1.0.2
  TERRAGRUNT_VERSION: 0.31.0
  TF_INPUT: false
  TF_VAR_database_name: ${{ secrets.STAGING_DATABASE_NAME }}
  TF_VAR_database_username: ${{ secrets.STAGING_DATABASE_USERNAME }}
  TF_VAR_database_password: ${{ secrets.STAGING_DATABASE_PASSWORD }}
  TF_VAR_cloudfront_custom_header_name: ${{ secrets.STAGING_CLOUDFRONT_CUSTOM_HEADER_NAME }}
  TF_VAR_cloudfront_custom_header_value: ${{ secrets.STAGING_CLOUDFRONT_CUSTOM_HEADER_VALUE }}
  TF_VAR_list_manager_api_key: ${{ secrets.STAGING_LIST_MANAGER_API_KEY }}
  TF_VAR_list_manager_endpoint: ${{ secrets.STAGING_LIST_MANAGER_ENDPOINT }}
  TF_VAR_list_manager_service_id: ${{ secrets.STAGING_LIST_MANAGER_SERVICE_ID }}
  TF_VAR_list_manager_notify_services: ${{ secrets.STAGING_LIST_MANAGER_NOTIFY_SERVICES }}
  TF_VAR_notify_api_key: ${{ secrets.STAGING_NOTIFY_API_KEY }}
  TF_VAR_slack_webhook_url: ${{ secrets.STAGING_SLACK_WEBHOOK_URL }}
  TF_VAR_wordpress_auth_key: ${{ secrets.STAGING_WORDPRESS_AUTH_KEY }}
  TF_VAR_wordpress_secure_auth_key: ${{ secrets.STAGING_WORDPRESS_SECURE_AUTH_KEY }}
  TF_VAR_wordpress_logged_in_key: ${{ secrets.STAGING_WORDPRESS_LOGGED_IN_KEY }}
  TF_VAR_wordpress_nonce_key: ${{ secrets.STAGING_WORDPRESS_NONCE_KEY }}
  TF_VAR_wordpress_auth_salt: ${{ secrets.STAGING_WORDPRESS_AUTH_SALT }}
  TF_VAR_wordpress_secure_auth_salt: ${{ secrets.STAGING_WORDPRESS_SECURE_AUTH_SALT }}
  TF_VAR_wordpress_logged_in_salt: ${{ secrets.STAGING_WORDPRESS_LOGGED_IN_SALT }}
  TF_VAR_wordpress_nonce_salt: ${{ secrets.STAGING_WORDPRESS_NONCE_SALT }}

jobs:

  terragrunt-plan-staging:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec # v1.3.2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/*
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721 # v2.10.2
        id: filter
        with:
          filters: |
            common:
              - '.github/workflows/terragrunt-plan-staging.yml'
              - 'infrastructure/terragrunt/env/common/**'
              - 'infrastructure/terragrunt/env/terragrunt.hcl'
              - 'infrastructure/terragrunt/env/staging/env_vars.hcl'
            alarms:
              - 'infrastructure/terragrunt/aws/alarms/**'
              - 'infrastructure/terragrunt/env/staging/alarms/**'
            database:
              - 'infrastructure/terragrunt/aws/database/**'
              - 'infrastructure/terragrunt/env/staging/database/**'
            ecr:
              - 'infrastructure/terragrunt/aws/ecr/**'
              - 'infrastructure/terragrunt/env/staging/ecr/**'
            ecs:
              - 'infrastructure/terragrunt/aws/ecs/**'
              - 'infrastructure/terragrunt/env/staging/ecs/**'
            hosted-zone:
              - 'infrastructure/terragrunt/aws/hosted-zone/**'
              - 'infrastructure/terragrunt/env/staging/hosted-zone/**'
            load-balancer:
              - 'infrastructure/terragrunt/aws/load-balancer/**'
              - 'infrastructure/terragrunt/env/staging/load-balancer/**'
            network:
              - 'infrastructure/terragrunt/aws/network/**'
              - 'infrastructure/terragrunt/env/staging/network/**'

      # No dependencies
      - name: Terragrunt plan network
        if: ${{ steps.filter.outputs.network == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v1
        with:
          directory: "infrastructure/terragrunt/env/staging/network"
          comment-delete: "true"
          comment-title: "Staging: network"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan hosted-zone
        if: ${{ steps.filter.outputs.hosted-zone == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v1
        with:
          directory: "infrastructure/terragrunt/env/staging/hosted-zone"
          comment-delete: "true"
          comment-title: "Staging: hosted-zone"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan ecr
        if: ${{ steps.filter.outputs.ecr == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v1
        with:
          directory: "infrastructure/terragrunt/env/staging/ecr"
          comment-delete: "true"
          comment-title: "Staging: ecr"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Network dependency
      - name: Terragrunt plan database
        if: ${{ steps.filter.outputs.database == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v1
        with:
          directory: "infrastructure/terragrunt/env/staging/database"
          comment-delete: "true"
          comment-title: "Staging: database"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan load-balancer
        if: ${{ steps.filter.outputs.load-balancer == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v1
        with:
          directory: "infrastructure/terragrunt/env/staging/load-balancer"
          comment-delete: "true"
          comment-title: "Staging: load-balancer"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Load-balancer & database dependency
      - name: Terragrunt plan ecs
        if: ${{ steps.filter.outputs.ecs == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v1
        with:
          directory: "infrastructure/terragrunt/env/staging/ecs"
          comment-delete: "true"
          comment-title: "Staging: ecs"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Depends on everything
      - name: Terragrunt plan alarms
        if: ${{ steps.filter.outputs.alarms == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v1
        with:
          directory: "infrastructure/terragrunt/env/staging/alarms"
          comment-delete: "true"
          comment-title: "Staging: alarms"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
