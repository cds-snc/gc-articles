name: "Terragrunt plan STAGING"

on:
  pull_request:
    paths:
      - "infrastructure/terragrunt/aws/**"
      - "infrastructure/terragrunt/env/staging/**"
      - "infrastructure/terragrunt/env/common/**"
      - "infrastructure/terragrunt/env/terragrunt.hcl"
      - ".github/workflows/terragrunt-plan-staging.yml"

env:
  AWS_REGION: ca-central-1
  AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_VERSION: 1.0.10
  TERRAGRUNT_VERSION: 0.35.6
  TF_INPUT: false
  TF_VAR_database_name: ${{ secrets.STAGING_DATABASE_NAME }}
  TF_VAR_database_username: ${{ secrets.STAGING_DATABASE_USERNAME }}
  TF_VAR_database_password: ${{ secrets.STAGING_DATABASE_PASSWORD }}
  TF_VAR_cloudfront_custom_header_name: ${{ secrets.STAGING_CLOUDFRONT_CUSTOM_HEADER_NAME }}
  TF_VAR_cloudfront_custom_header_value: ${{ secrets.STAGING_CLOUDFRONT_CUSTOM_HEADER_VALUE }}
  TF_VAR_list_manager_endpoint: ${{ secrets.STAGING_LIST_MANAGER_ENDPOINT }}
  TF_VAR_default_list_manager_api_key: ${{ secrets.STAGING_DEFAULT_LIST_MANAGER_API_KEY }}
  TF_VAR_default_notify_api_key: ${{ secrets.STAGING_DEFAULT_NOTIFY_API_KEY }}
  TF_VAR_encryption_key: ${{ secrets.STAGING_ENCRYPTION_KEY }}
  TF_VAR_s3_uploads_bucket: ${{ secrets.STAGING_S3_UPLOADS_BUCKET }}
  TF_VAR_s3_uploads_key: ${{ secrets.STAGING_S3_UPLOADS_KEY }}
  TF_VAR_s3_uploads_secret: ${{ secrets.STAGING_S3_UPLOADS_SECRET }}
  TF_VAR_c3_aws_access_key_id: ${{ secrets.STAGING_C3_AWS_ACCESS_KEY_ID }}
  TF_VAR_c3_aws_secret_access_key: ${{ secrets.STAGING_C3_AWS_SECRET_ACCESS_KEY }}
  TF_VAR_slack_webhook_url: ${{ secrets.STAGING_SLACK_WEBHOOK_URL }}
  TF_VAR_wordpress_auth_key: ${{ secrets.STAGING_WORDPRESS_AUTH_KEY }}
  TF_VAR_wordpress_secure_auth_key: ${{ secrets.STAGING_WORDPRESS_SECURE_AUTH_KEY }}
  TF_VAR_wordpress_logged_in_key: ${{ secrets.STAGING_WORDPRESS_LOGGED_IN_KEY }}
  TF_VAR_wordpress_nonce_key: ${{ secrets.STAGING_WORDPRESS_NONCE_KEY }}
  TF_VAR_wordpress_auth_salt: ${{ secrets.STAGING_WORDPRESS_AUTH_SALT }}
  TF_VAR_wordpress_secure_auth_salt: ${{ secrets.STAGING_WORDPRESS_SECURE_AUTH_SALT }}
  TF_VAR_wordpress_logged_in_salt: ${{ secrets.STAGING_WORDPRESS_LOGGED_IN_SALT }}
  TF_VAR_wordpress_nonce_salt: ${{ secrets.STAGING_WORDPRESS_NONCE_SALT }}
  TF_VAR_jwt_auth_secret_key: ${{ secrets.STAGING_JWT_AUTH_SECRET_KEY }}
  TF_VAR_wpml_site_key: ${{ secrets.STAGING_WPML_SITE_KEY }}
  TF_VAR_zendesk_api_url: ${{ secrets.ZENDESK_API_URL }}

jobs:
  terragrunt-plan-staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # tag=v2

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - uses: cds-snc/paths-filter@87bb78bc509076907db04d7f616bd2533af0e7fe # tag=v2.10.3
        id: filter
        with:
          filters: |
            common:
              - '.github/workflows/terragrunt-plan-staging.yml'
              - 'infrastructure/terragrunt/env/common/**'
              - 'infrastructure/terragrunt/env/terragrunt.hcl'
              - 'infrastructure/terragrunt/env/staging/env_vars.hcl'
            alarms:
              - 'infrastructure/terragrunt/aws/alarms/**'
              - 'infrastructure/terragrunt/env/staging/alarms/**'
            database:
              - 'infrastructure/terragrunt/aws/database/**'
              - 'infrastructure/terragrunt/env/staging/database/**'
            ecr:
              - 'infrastructure/terragrunt/aws/ecr/**'
              - 'infrastructure/terragrunt/env/staging/ecr/**'
            ecs:
              - 'infrastructure/terragrunt/aws/ecs/**'
              - 'infrastructure/terragrunt/env/staging/ecs/**'
            hosted-zone:
              - 'infrastructure/terragrunt/aws/hosted-zone/**'
              - 'infrastructure/terragrunt/env/staging/hosted-zone/**'
            load-balancer:
              - 'infrastructure/terragrunt/aws/load-balancer/**'
              - 'infrastructure/terragrunt/env/staging/load-balancer/**'
            network:
              - 'infrastructure/terragrunt/aws/network/**'
              - 'infrastructure/terragrunt/env/staging/network/**'
            storage:
              - 'infrastructure/terragrunt/aws/storage/**'
              - 'infrastructure/terragrunt/env/staging/storage/**'

      # No dependencies
      - name: Terragrunt plan network
        if: ${{ steps.filter.outputs.network == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@ac0a542b33131e422d08653af6271d29f95ef9ab # v3.0.4
        with:
          directory: "infrastructure/terragrunt/env/staging/network"
          comment-delete: "true"
          comment-title: "Staging: network"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan hosted-zone
        if: ${{ steps.filter.outputs.hosted-zone == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@ac0a542b33131e422d08653af6271d29f95ef9ab # v3.0.4
        with:
          directory: "infrastructure/terragrunt/env/staging/hosted-zone"
          comment-delete: "true"
          comment-title: "Staging: hosted-zone"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan ecr
        if: ${{ steps.filter.outputs.ecr == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@ac0a542b33131e422d08653af6271d29f95ef9ab # v3.0.4
        with:
          directory: "infrastructure/terragrunt/env/staging/ecr"
          comment-delete: "true"
          comment-title: "Staging: ecr"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan storage
        if: ${{ steps.filter.outputs.storage == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@ac0a542b33131e422d08653af6271d29f95ef9ab # v3.0.4
        with:
          directory: "infrastructure/terragrunt/env/staging/storage"
          comment-delete: "true"
          comment-title: "Staging: storage"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Network dependency
      - name: Terragrunt plan database
        if: ${{ steps.filter.outputs.database == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@ac0a542b33131e422d08653af6271d29f95ef9ab # v3.0.4
        with:
          directory: "infrastructure/terragrunt/env/staging/database"
          comment-delete: "true"
          comment-title: "Staging: database"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan load-balancer
        if: ${{ steps.filter.outputs.load-balancer == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@ac0a542b33131e422d08653af6271d29f95ef9ab # v3.0.4
        with:
          directory: "infrastructure/terragrunt/env/staging/load-balancer"
          comment-delete: "true"
          comment-title: "Staging: load-balancer"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Load-balancer & database dependency
      - name: Terragrunt plan ecs
        if: ${{ steps.filter.outputs.ecs == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@ac0a542b33131e422d08653af6271d29f95ef9ab # v3.0.4
        with:
          directory: "infrastructure/terragrunt/env/staging/ecs"
          comment-delete: "true"
          comment-title: "Staging: ecs"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Depends on everything
      - name: Terragrunt plan alarms
        if: ${{ steps.filter.outputs.alarms == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@ac0a542b33131e422d08653af6271d29f95ef9ab # v3.0.4
        with:
          directory: "infrastructure/terragrunt/env/staging/alarms"
          comment-delete: "true"
          comment-title: "Staging: alarms"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
