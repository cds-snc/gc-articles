version: '3'

services:
  db:
    image: mariadb:10.5.8
    container_name: db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=wordpress
      - MYSQL_ROOT_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - MYSQL_USER=${WORDPRESS_DB_USER}
      - MYSQL_PASSWORD=${WORDPRESS_DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network
    ports:
      - 3307:3306
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE

  wordpress:
    depends_on:
      - db
    build:
      dockerfile: Dockerfile
      context: ./wordpress/docker
    container_name: wordpress
    restart: always
    ports:
      - 80:80
    env_file: .env
    volumes:
      - wordpress:/usr/src/gc-articles/wordpress
      - ./wordpress/vendor:/usr/src/gc-articles/vendor
      - ./wordpress/wp-content:/usr/src/gc-articles/wordpress/wp-content
      - ./wordpress/wp-config.php:/usr/src/gc-articles/wordpress/wp-config.php
      - ./wordpress/.htaccess-multisite:/usr/src/gc-articles/wordpress/.htaccess
      - ./wordpress/docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./wordpress/docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
      - ./wordpress/docker/php/conf.d/upload_max_filesize.ini:/usr/local/etc/php/conf.d/uplaod_max_filesize.ini
    networks:
      - app-network

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - app-network

  composer:
    restart: 'no'
    image: composer/composer:latest
    command: install
    volumes:
      - ./wordpress:/app

  wp-install:
    depends_on:
      - db
      - wordpress
    image: wordpress:cli-php8.0
    env_file: .env
    command: >
      /bin/bash -c '
      /wait-for-it.sh db:3306;
      cd /usr/src/gc-articles/wordpress;
      wp core multisite-install --url="localhost" --title="CDS Wordpress Base" --admin_user=${ADMIN_USER} --admin_password=${ADMIN_PASSWORD} --admin_email=${ADMIN_EMAIL};
      wp option update permalink_structure "/%postname%/";
      wp theme enable cds-default --activate;
      wp plugin activate sitepress-multilingual-cms --network;
      '
    volumes:
      - wordpress:/usr/src/gc-articles/wordpress
      - ./wordpress/vendor:/usr/src/gc-articles/vendor
      - ./wordpress/wp-content:/usr/src/gc-articles/wordpress/wp-content
      - ./wordpress/wp-config.php:/usr/src/gc-articles/wordpress/wp-config.php
      - ./wait-for-it.sh:/wait-for-it.sh
    networks:
      - app-network

  cli:
    container_name: cli
    depends_on:
      - db
      - wordpress
    build: 
      context: .
      dockerfile: .devcontainer/Dockerfile
    env_file: .env
    volumes:
      - wordpress:/usr/src/gc-articles/wordpress
      - ./wordpress/vendor:/usr/src/gc-articles/vendor
      - ./wordpress/wp-content:/usr/src/gc-articles/wordpress/wp-content
      - ./wordpress/wp-config.php:/usr/src/gc-articles/wordpress/wp-config.php
      - ./:/home/default/project
      - ~/.ssh:/home/default/.ssh
      - ~/.gitconfig:/home/default/.gitconfig
    restart: unless-stopped
    networks:
      - app-network

volumes:
  wordpress:
  dbdata:

networks:
  app-network:
    driver: bridge